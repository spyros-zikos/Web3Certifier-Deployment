/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  31337: {
    Certifier: {
      address: "0x700b6a60ce7eaaea56f065753d8dcb9653dbad35",
      abi: [
        {
          type: "constructor",
          inputs: [
            {
              name: "timeToCorrectExam",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "priceFeed",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "approve",
          inputs: [
            {
              name: "to",
              type: "address",
              internalType: "address",
            },
            {
              name: "tokenId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "balanceOf",
          inputs: [
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "cancelUncorrectedExam",
          inputs: [
            {
              name: "examId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "claimCertificate",
          inputs: [
            {
              name: "examId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "answers",
              type: "uint256[]",
              internalType: "uint256[]",
            },
            {
              name: "secretNumber",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "correctExam",
          inputs: [
            {
              name: "examId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "answers",
              type: "uint256[]",
              internalType: "uint256[]",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "createExam",
          inputs: [
            {
              name: "name",
              type: "string",
              internalType: "string",
            },
            {
              name: "description",
              type: "string",
              internalType: "string",
            },
            {
              name: "endTime",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "questions",
              type: "string[]",
              internalType: "string[]",
            },
            {
              name: "price",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "baseScore",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "imageUrl",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [],
          stateMutability: "payable",
        },
        {
          type: "function",
          name: "getApproved",
          inputs: [
            {
              name: "tokenId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getCertifierExams",
          inputs: [
            {
              name: "certifier",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256[]",
              internalType: "uint256[]",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getDecimals",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "pure",
        },
        {
          type: "function",
          name: "getExam",
          inputs: [
            {
              name: "id",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "tuple",
              internalType: "struct Exam",
              components: [
                {
                  name: "id",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "name",
                  type: "string",
                  internalType: "string",
                },
                {
                  name: "description",
                  type: "string",
                  internalType: "string",
                },
                {
                  name: "endTime",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "status",
                  type: "uint8",
                  internalType: "enum Status",
                },
                {
                  name: "questions",
                  type: "string[]",
                  internalType: "string[]",
                },
                {
                  name: "answers",
                  type: "uint256[]",
                  internalType: "uint256[]",
                },
                {
                  name: "price",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "baseScore",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "imageUrl",
                  type: "string",
                  internalType: "string",
                },
                {
                  name: "users",
                  type: "address[]",
                  internalType: "address[]",
                },
                {
                  name: "etherAccumulated",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "certifier",
                  type: "address",
                  internalType: "address",
                },
              ],
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getLastExamId",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getTimeToCorrectExam",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getTokenCounter",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getUsdToEthRate",
          inputs: [
            {
              name: "usdAmount",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getUser",
          inputs: [
            {
              name: "index",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getUserAnswer",
          inputs: [
            {
              name: "user",
              type: "address",
              internalType: "address",
            },
            {
              name: "examId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getUserFromUsername",
          inputs: [
            {
              name: "username",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getUserHasClaimed",
          inputs: [
            {
              name: "user",
              type: "address",
              internalType: "address",
            },
            {
              name: "examId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getUsername",
          inputs: [
            {
              name: "user",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getUsers",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address[]",
              internalType: "address[]",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "isApprovedForAll",
          inputs: [
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
            {
              name: "operator",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "name",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "ownerOf",
          inputs: [
            {
              name: "tokenId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "refundExam",
          inputs: [
            {
              name: "examId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "safeTransferFrom",
          inputs: [
            {
              name: "from",
              type: "address",
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              internalType: "address",
            },
            {
              name: "tokenId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "safeTransferFrom",
          inputs: [
            {
              name: "from",
              type: "address",
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              internalType: "address",
            },
            {
              name: "tokenId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "data",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "setApprovalForAll",
          inputs: [
            {
              name: "operator",
              type: "address",
              internalType: "address",
            },
            {
              name: "approved",
              type: "bool",
              internalType: "bool",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "setUsername",
          inputs: [
            {
              name: "username",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "submitAnswersFree",
          inputs: [
            {
              name: "examId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "hashedAnswer",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "submitAnswersPaid",
          inputs: [
            {
              name: "examId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "hashedAnswer",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
          outputs: [],
          stateMutability: "payable",
        },
        {
          type: "function",
          name: "supportsInterface",
          inputs: [
            {
              name: "interfaceId",
              type: "bytes4",
              internalType: "bytes4",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "symbol",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "tokenURI",
          inputs: [
            {
              name: "tokenId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "transferFrom",
          inputs: [
            {
              name: "from",
              type: "address",
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              internalType: "address",
            },
            {
              name: "tokenId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "event",
          name: "Approval",
          inputs: [
            {
              name: "owner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "approved",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "tokenId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "ApprovalForAll",
          inputs: [
            {
              name: "owner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "operator",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "approved",
              type: "bool",
              indexed: false,
              internalType: "bool",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "CancelExam",
          inputs: [
            {
              name: "examId",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "ClaimNFT",
          inputs: [
            {
              name: "user",
              type: "address",
              indexed: false,
              internalType: "address",
            },
            {
              name: "examId",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "tokenId",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "ClaimRefund",
          inputs: [
            {
              name: "user",
              type: "address",
              indexed: false,
              internalType: "address",
            },
            {
              name: "examId",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "CorrectExam",
          inputs: [
            {
              name: "examId",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "answers",
              type: "uint256[]",
              indexed: false,
              internalType: "uint256[]",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "CreateExam",
          inputs: [
            {
              name: "id",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
            {
              name: "name",
              type: "string",
              indexed: false,
              internalType: "string",
            },
            {
              name: "description",
              type: "string",
              indexed: false,
              internalType: "string",
            },
            {
              name: "endTime",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "status",
              type: "uint8",
              indexed: false,
              internalType: "enum Status",
            },
            {
              name: "questions",
              type: "string[]",
              indexed: false,
              internalType: "string[]",
            },
            {
              name: "answers",
              type: "uint256[]",
              indexed: false,
              internalType: "uint256[]",
            },
            {
              name: "price",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "baseScore",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "imageUrl",
              type: "string",
              indexed: false,
              internalType: "string",
            },
            {
              name: "users",
              type: "address[]",
              indexed: false,
              internalType: "address[]",
            },
            {
              name: "etherAccumulated",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "certifier",
              type: "address",
              indexed: false,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "SubmitAnswersFree",
          inputs: [
            {
              name: "user",
              type: "address",
              indexed: false,
              internalType: "address",
            },
            {
              name: "examId",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "hashedAnswer",
              type: "bytes32",
              indexed: false,
              internalType: "bytes32",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "SubmitAnswersPaid",
          inputs: [
            {
              name: "user",
              type: "address",
              indexed: false,
              internalType: "address",
            },
            {
              name: "examId",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "hashedAnswer",
              type: "bytes32",
              indexed: false,
              internalType: "bytes32",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "Transfer",
          inputs: [
            {
              name: "from",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "tokenId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "error",
          name: "Certifier__AnswerHashesDontMatch",
          inputs: [
            {
              name: "expected",
              type: "bytes32",
              internalType: "bytes32",
            },
            {
              name: "actual",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
        },
        {
          type: "error",
          name: "Certifier__AnswersLengthDontMatch",
          inputs: [
            {
              name: "correctAnswersLength",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "userAnswersLength",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "Certifier__EtherTransferFailed",
          inputs: [],
        },
        {
          type: "error",
          name: "Certifier__ExamAlreadyEnded",
          inputs: [
            {
              name: "examId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "Certifier__ExamEnded",
          inputs: [
            {
              name: "examId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "Certifier__ExamIsCancelled",
          inputs: [
            {
              name: "examId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "Certifier__ExamIsNotCancelled",
          inputs: [
            {
              name: "examId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "Certifier__NotEnoughEther",
          inputs: [
            {
              name: "amountSent",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "examPrice",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "Certifier__NotTheTimeForExamCorrection",
          inputs: [
            {
              name: "examId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "Certifier__OnlyCertifierCanCorrect",
          inputs: [
            {
              name: "examId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "Certifier__ThisExamIsNotFree",
          inputs: [
            {
              name: "examId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "price",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "Certifier__ThisExamIsNotPaid",
          inputs: [
            {
              name: "examId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "Certifier__TooSoonToCancelExam",
          inputs: [
            {
              name: "examId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "Certifier__UserAlreadyClaimedCancelledExam",
          inputs: [
            {
              name: "examId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "Certifier__UserAlreadyClaimedNFT",
          inputs: [
            {
              name: "examId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "Certifier__UserAlreadySubmittedAnswers",
          inputs: [
            {
              name: "examId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "Certifier__UserDidNotParticipate",
          inputs: [
            {
              name: "examId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "Certifier__UserFailedExam",
          inputs: [
            {
              name: "userScore",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "examBaseScore",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "Certifier__WrongAnswers",
          inputs: [
            {
              name: "expected",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "actual",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "ERC721IncorrectOwner",
          inputs: [
            {
              name: "sender",
              type: "address",
              internalType: "address",
            },
            {
              name: "tokenId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "ERC721InsufficientApproval",
          inputs: [
            {
              name: "operator",
              type: "address",
              internalType: "address",
            },
            {
              name: "tokenId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "ERC721InvalidApprover",
          inputs: [
            {
              name: "approver",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "ERC721InvalidOperator",
          inputs: [
            {
              name: "operator",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "ERC721InvalidOwner",
          inputs: [
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "ERC721InvalidReceiver",
          inputs: [
            {
              name: "receiver",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "ERC721InvalidSender",
          inputs: [
            {
              name: "sender",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "ERC721NonexistentToken",
          inputs: [
            {
              name: "tokenId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "ReentrancyGuardReentrantCall",
          inputs: [],
        },
        {
          type: "error",
          name: "StringsInsufficientHexLength",
          inputs: [
            {
              name: "value",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "length",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
      ],
      inheritedFunctions: {
        approve: "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        balanceOf:
          "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        getApproved:
          "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        isApprovedForAll:
          "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        name: "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        ownerOf: "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        safeTransferFrom:
          "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        setApprovalForAll:
          "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        supportsInterface:
          "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        symbol: "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        tokenURI:
          "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        transferFrom:
          "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
      },
    },
  },
  11155111: {
    Certifier: {
      address: "0x00840ff961c471ddd33b17d188e72ee4c4694fad",
      abi: [
        {
          type: "constructor",
          inputs: [
            {
              name: "timeToCorrectExam",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "priceFeed",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "approve",
          inputs: [
            {
              name: "to",
              type: "address",
              internalType: "address",
            },
            {
              name: "tokenId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "balanceOf",
          inputs: [
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "cancelUncorrectedExam",
          inputs: [
            {
              name: "examId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "claimCertificate",
          inputs: [
            {
              name: "examId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "answers",
              type: "uint256[]",
              internalType: "uint256[]",
            },
            {
              name: "secretNumber",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "correctExam",
          inputs: [
            {
              name: "examId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "answers",
              type: "uint256[]",
              internalType: "uint256[]",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "createExam",
          inputs: [
            {
              name: "name",
              type: "string",
              internalType: "string",
            },
            {
              name: "description",
              type: "string",
              internalType: "string",
            },
            {
              name: "endTime",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "questions",
              type: "string[]",
              internalType: "string[]",
            },
            {
              name: "price",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "baseScore",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "imageUrl",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [],
          stateMutability: "payable",
        },
        {
          type: "function",
          name: "getApproved",
          inputs: [
            {
              name: "tokenId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getCertifierExams",
          inputs: [
            {
              name: "certifier",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256[]",
              internalType: "uint256[]",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getDecimals",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "pure",
        },
        {
          type: "function",
          name: "getExam",
          inputs: [
            {
              name: "id",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "tuple",
              internalType: "struct Exam",
              components: [
                {
                  name: "id",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "name",
                  type: "string",
                  internalType: "string",
                },
                {
                  name: "description",
                  type: "string",
                  internalType: "string",
                },
                {
                  name: "endTime",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "status",
                  type: "uint8",
                  internalType: "enum Status",
                },
                {
                  name: "questions",
                  type: "string[]",
                  internalType: "string[]",
                },
                {
                  name: "answers",
                  type: "uint256[]",
                  internalType: "uint256[]",
                },
                {
                  name: "price",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "baseScore",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "imageUrl",
                  type: "string",
                  internalType: "string",
                },
                {
                  name: "users",
                  type: "address[]",
                  internalType: "address[]",
                },
                {
                  name: "etherAccumulated",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "certifier",
                  type: "address",
                  internalType: "address",
                },
              ],
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getLastExamId",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getTimeToCorrectExam",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getTokenCounter",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getUsdToEthRate",
          inputs: [
            {
              name: "usdAmount",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getUser",
          inputs: [
            {
              name: "index",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getUserAnswer",
          inputs: [
            {
              name: "user",
              type: "address",
              internalType: "address",
            },
            {
              name: "examId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getUserFromUsername",
          inputs: [
            {
              name: "username",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getUserHasClaimed",
          inputs: [
            {
              name: "user",
              type: "address",
              internalType: "address",
            },
            {
              name: "examId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getUsername",
          inputs: [
            {
              name: "user",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getUsers",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address[]",
              internalType: "address[]",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "isApprovedForAll",
          inputs: [
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
            {
              name: "operator",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "name",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "ownerOf",
          inputs: [
            {
              name: "tokenId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "refundExam",
          inputs: [
            {
              name: "examId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "safeTransferFrom",
          inputs: [
            {
              name: "from",
              type: "address",
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              internalType: "address",
            },
            {
              name: "tokenId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "safeTransferFrom",
          inputs: [
            {
              name: "from",
              type: "address",
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              internalType: "address",
            },
            {
              name: "tokenId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "data",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "setApprovalForAll",
          inputs: [
            {
              name: "operator",
              type: "address",
              internalType: "address",
            },
            {
              name: "approved",
              type: "bool",
              internalType: "bool",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "setUsername",
          inputs: [
            {
              name: "username",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "submitAnswersFree",
          inputs: [
            {
              name: "examId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "hashedAnswer",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "submitAnswersPaid",
          inputs: [
            {
              name: "examId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "hashedAnswer",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
          outputs: [],
          stateMutability: "payable",
        },
        {
          type: "function",
          name: "supportsInterface",
          inputs: [
            {
              name: "interfaceId",
              type: "bytes4",
              internalType: "bytes4",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "symbol",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "tokenURI",
          inputs: [
            {
              name: "tokenId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "transferFrom",
          inputs: [
            {
              name: "from",
              type: "address",
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              internalType: "address",
            },
            {
              name: "tokenId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "event",
          name: "Approval",
          inputs: [
            {
              name: "owner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "approved",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "tokenId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "ApprovalForAll",
          inputs: [
            {
              name: "owner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "operator",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "approved",
              type: "bool",
              indexed: false,
              internalType: "bool",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "CancelExam",
          inputs: [
            {
              name: "examId",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "ClaimNFT",
          inputs: [
            {
              name: "user",
              type: "address",
              indexed: false,
              internalType: "address",
            },
            {
              name: "examId",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "tokenId",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "ClaimRefund",
          inputs: [
            {
              name: "user",
              type: "address",
              indexed: false,
              internalType: "address",
            },
            {
              name: "examId",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "CorrectExam",
          inputs: [
            {
              name: "examId",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "answers",
              type: "uint256[]",
              indexed: false,
              internalType: "uint256[]",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "CreateExam",
          inputs: [
            {
              name: "id",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
            {
              name: "name",
              type: "string",
              indexed: false,
              internalType: "string",
            },
            {
              name: "description",
              type: "string",
              indexed: false,
              internalType: "string",
            },
            {
              name: "endTime",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "status",
              type: "uint8",
              indexed: false,
              internalType: "enum Status",
            },
            {
              name: "questions",
              type: "string[]",
              indexed: false,
              internalType: "string[]",
            },
            {
              name: "answers",
              type: "uint256[]",
              indexed: false,
              internalType: "uint256[]",
            },
            {
              name: "price",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "baseScore",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "imageUrl",
              type: "string",
              indexed: false,
              internalType: "string",
            },
            {
              name: "users",
              type: "address[]",
              indexed: false,
              internalType: "address[]",
            },
            {
              name: "etherAccumulated",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "certifier",
              type: "address",
              indexed: false,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "SubmitAnswersFree",
          inputs: [
            {
              name: "user",
              type: "address",
              indexed: false,
              internalType: "address",
            },
            {
              name: "examId",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "hashedAnswer",
              type: "bytes32",
              indexed: false,
              internalType: "bytes32",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "SubmitAnswersPaid",
          inputs: [
            {
              name: "user",
              type: "address",
              indexed: false,
              internalType: "address",
            },
            {
              name: "examId",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "hashedAnswer",
              type: "bytes32",
              indexed: false,
              internalType: "bytes32",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "Transfer",
          inputs: [
            {
              name: "from",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "tokenId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "error",
          name: "Certifier__AnswerHashesDontMatch",
          inputs: [
            {
              name: "expected",
              type: "bytes32",
              internalType: "bytes32",
            },
            {
              name: "actual",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
        },
        {
          type: "error",
          name: "Certifier__AnswersLengthDontMatch",
          inputs: [
            {
              name: "correctAnswersLength",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "userAnswersLength",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "Certifier__EtherTransferFailed",
          inputs: [],
        },
        {
          type: "error",
          name: "Certifier__ExamAlreadyEnded",
          inputs: [
            {
              name: "examId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "Certifier__ExamEnded",
          inputs: [
            {
              name: "examId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "Certifier__ExamIsCancelled",
          inputs: [
            {
              name: "examId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "Certifier__ExamIsNotCancelled",
          inputs: [
            {
              name: "examId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "Certifier__NotEnoughEther",
          inputs: [
            {
              name: "amountSent",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "examPrice",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "Certifier__NotTheTimeForExamCorrection",
          inputs: [
            {
              name: "examId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "Certifier__OnlyCertifierCanCorrect",
          inputs: [
            {
              name: "examId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "Certifier__ThisExamIsNotFree",
          inputs: [
            {
              name: "examId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "price",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "Certifier__ThisExamIsNotPaid",
          inputs: [
            {
              name: "examId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "Certifier__TooSoonToCancelExam",
          inputs: [
            {
              name: "examId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "Certifier__UserAlreadyClaimedCancelledExam",
          inputs: [
            {
              name: "examId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "Certifier__UserAlreadyClaimedNFT",
          inputs: [
            {
              name: "examId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "Certifier__UserAlreadySubmittedAnswers",
          inputs: [
            {
              name: "examId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "Certifier__UserDidNotParticipate",
          inputs: [
            {
              name: "examId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "Certifier__UserFailedExam",
          inputs: [
            {
              name: "userScore",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "examBaseScore",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "Certifier__WrongAnswers",
          inputs: [
            {
              name: "expected",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "actual",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "ERC721IncorrectOwner",
          inputs: [
            {
              name: "sender",
              type: "address",
              internalType: "address",
            },
            {
              name: "tokenId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "ERC721InsufficientApproval",
          inputs: [
            {
              name: "operator",
              type: "address",
              internalType: "address",
            },
            {
              name: "tokenId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "ERC721InvalidApprover",
          inputs: [
            {
              name: "approver",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "ERC721InvalidOperator",
          inputs: [
            {
              name: "operator",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "ERC721InvalidOwner",
          inputs: [
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "ERC721InvalidReceiver",
          inputs: [
            {
              name: "receiver",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "ERC721InvalidSender",
          inputs: [
            {
              name: "sender",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "ERC721NonexistentToken",
          inputs: [
            {
              name: "tokenId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "ReentrancyGuardReentrantCall",
          inputs: [],
        },
        {
          type: "error",
          name: "StringsInsufficientHexLength",
          inputs: [
            {
              name: "value",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "length",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
      ],
      inheritedFunctions: {
        approve: "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        balanceOf:
          "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        getApproved:
          "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        isApprovedForAll:
          "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        name: "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        ownerOf: "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        safeTransferFrom:
          "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        setApprovalForAll:
          "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        supportsInterface:
          "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        symbol: "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        tokenURI:
          "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        transferFrom:
          "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
      },
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
